from aiogram.types import InlineKeyboardMarkup, ReplyKeyboardMarkup, InlineKeyboardButton, KeyboardButton


async def get_main_menu()-> InlineKeyboardMarkup:
    create_task = InlineKeyboardButton(text="üìã –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É", callback_data="create_task")
    about_us = InlineKeyboardButton(text="‚ÑπÔ∏è –û –Ω–∞—Å", callback_data="about_us")
    links = InlineKeyboardButton(text="–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏", callback_data="links")
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[create_task], [about_us], [links]])
    return keyboard

# –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ "–ü–æ–ª–æ–∂–∏—Ç—å –∑–∞–¥–∞—á—É –≤ —Ç–∞–ø–∫–∏":
#
# –ë–æ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç
# "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ –∏–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª (PDF/—Ñ–æ—Ç–æ)"
#
# –ö–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞:

async def set_subject() -> InlineKeyboardMarkup:
    math_button = InlineKeyboardButton(text="–í—ã—Å—à–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞", callback_data='math')
    prog_button = InlineKeyboardButton(text="–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data="prog")
    inf_sys_button = InlineKeyboardButton(text="–ò–°–∏–¢", callback_data="inf_sys")
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[math_button], [prog_button], [inf_sys_button]])
    return keyboard

async def set_solve_method() -> InlineKeyboardMarkup:
    solver_solve = InlineKeyboardButton(text = "–û—Ç–¥–∞—Ç—å –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é", callback_data="human_solve")
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[solver_solve]])
    return keyboard

async def show_tasks() -> InlineKeyboardMarkup:
    show_button = InlineKeyboardButton(text = "–ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏", callback_data="new_tasks")
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[show_button]])
    return keyboard

async def create_task_choice_keyboard(task_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∑–∞–¥–∞—á–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º"""
    accept_button = InlineKeyboardButton(text="‚úÖ –í–∑—è—Ç—å –∑–∞–¥–∞—á—É", callback_data=f"accept_task_{task_id}")
    reject_button = InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_task_{task_id}")
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[accept_button, reject_button]])
    return keyboard

async def create_task_list_keyboard(tasks: list) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞—á"""
    buttons = []
    for task in tasks:
        task_text = f"üìù {task['subject']} - {task['problem_text'][:30]}..."
        task_button = InlineKeyboardButton(text=task_text, callback_data=f"view_task_{task['task_id']}")
        buttons.append([task_button])

    refresh_button = InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫", callback_data="refresh_tasks")
    buttons.append([refresh_button])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

async def set_payment_method():
    pass

async def payment_by_link(): #—é—Ä–ª-–∫–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç–∏—Ç—å
    pass
